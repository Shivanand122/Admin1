@model IEnumerable<AdminDAL.Entities2.Feature>
@addTagHelper *, Microsoft.FeatureManagement.AspNetCore
@using Newtonsoft.Json;
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@section scripts {
    <script>
        $(document).ready(function () {
            // Function to check the feature flag status
            function checkFeatureFlag() {
                $.ajax({
                    url: "/AdminM/IsAdminSideEnabled", // Update the URL to your controller action
                    type: "GET",
                    success: function (result) {
                        if (result) {
                            // Feature flag is enabled, show the "Download PDF" button
                            $('#externalPrintButton').show();

                        } else {
                            // Feature flag is disabled, hide the "Download PDF" button
                            $('#externalPrintButton').hide();
                        }
                    },
                    error: function (error) {
                        console.error("Error checking feature flag:", error);
                    }
                });
            }

            // Check the feature flag status every 5 seconds (adjust as needed)
            setInterval(checkFeatureFlag, 1000);

            // Initial check when the page loads
            checkFeatureFlag();
        });
    </script>
}


<style>

    .element-with-scroll {
        overflow-y: scroll;
        scrollbar-width: none; /* Firefox */
        -ms-overflow-style: none; /* IE and Edge */
    }

        .element-with-scroll::-webkit-scrollbar {
            display: none; /* Safari and Chrome */
        }

    /*
        .split-view {
            display: flex;
            justify-content: space-between;
        } */


    .feature-row {
        /* Your styles for individual feature rows */
        /* Example: */
        padding: 10px;
        border: 1px solid #ccc;
        margin-bottom: 10px;
    }


    .features-section {
        flex: 10; /* 80% width */
        padding: 20px;
        width: 100%;
        height: 1000px; /* Sample height */
        transition: transform 0.5s ease; /* Adding a transition effect */
        /* Add vertical scrollbar if needed */
    }

    /* .feature-details-section {
            flex-basis: 30%;
            padding: 20px;
            border-left: 1px solid #ccc;
            overflow-y: auto; /* Add scroll for overflow content */
    }

    */


    .comment-box {
        border-top: 1px solid #ccc;
        width: 100px; /* Adjust width as needed */
        margin-top: -1px; /* Adjust margin as needed to align properly with preview-pane */
        float: right;
    }

    .feature-details-popup {
        display: none;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: white;
        padding: 20px;
        border: 1px solid #ccc;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        z-index: 1000;
        width: 400px; /* Adjust the width as needed */
        flex-direction: row;
        align-items: center;
    }



    @@media (max-width: 576px) {
        .remove-left-padding {
            padding-left: 0;
            margin-bottom: 0;
        }

        #featuresTable {
            margin-left: 0;
            margin-right: 0;
        }

        .btn-sm {
            padding: 0.25rem 0.5rem;
            font-size: 0.8rem;
        }

        .table-responsive {
            padding-left: 0;
            padding-right: 0;
            margin-left: 0;
            margin-right: 0;
        }

            .table-responsive table {
                margin-bottom: 0;
            }

                .table-responsive table thead th,
                .table-responsive table tbody td {
                    padding: 8px;
                    font-size: 12px;
                }

        .card-body {
            padding: 0;
        }

        .search-container {
            margin-bottom: 10px;
        }

        .search-bar {
            margin-bottom: 10px;
        }

        #externalPrintButton {
            display: none !important;
        }
    }


    .preview-pane {
        /* Your styles for the preview pane */
        position: fixed;
        top: 50px; /* Adjust as needed */
        right: 10px; /* Adjust as needed */
        width: 230px; /* Adjust width as needed */
        height: 71%; /* Adjust height as needed */
        border: 1px solid #ccc;
        background-color: #f8f9fa;
        padding: 10px;
        overflow-y: auto; /* Enable vertical scroll if needed */
        display: none; /* Initially hide the preview pane */
        overflow: hidden;
    }


    .details-and-comment {
        position: fixed;
        top: 79%;
        left: 82.3%;
        display: flex;
        flex-direction: column;
        width: 230px; /* Adjust width according to the preview pane and comment box width */
        padding: 0; /* Reset padding */
        margin: 0; /* Reset margin */
        float: right;
    }


    .feature-row:hover {
        background-color: #f8f9fa;
        /* Lighter background color on hover */
        color: #007bff; /* Change text color on hover */
        transform: scale(1.002); /* Add a slight scale effect on hover */
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); /* Add a subtle box shadow on hover */
        transition: background-color 0.3s, color 0.3s, transform 0.3s, box-shadow 0.3s; /* Add smooth transition */
    }

    #chart-container {
        max-width: 500px; /* Adjust the maximum width as needed for larger screens */
        margin: auto;
        overflow-x: auto;
    }

    canvas {
        width: 100% !important;
        height: auto;
    }
</style>


<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="~/Admin.js"></script>


<script>

    function loadFeatureDetails(featureId) {
        const previewPane = document.getElementById('featurePreviewPane');
        const commentBoxContainer = document.getElementById('commentBoxContainer');
        var section = document.querySelector('.features-section');
        section.style.transform = 'translateX(-10%)'; // Move the section to the
        // Function to load comment box content
        function loadCommentBox(featureId) {
            fetch(`/AdminM/CommentBox?featureId=${featureId}`)
                .then(response => response.text())
                .then(commentBoxData => {
                    commentBoxContainer.innerHTML = commentBoxData;
                    commentBoxContainer.style.display = 'block'; // Display the comment box after loading its content

                    // Optionally show the comment box if needed based on your UI logic
                })
                .catch(error => {
                    console.error('There was a problem loading the comment box:', error);
                });
        }

        // Load feature details
        fetch(`/AdminM/FeatureDetails?featureId=${featureId}`)
            .then(response => response.text())
            .then(featureData => {
                previewPane.innerHTML = featureData;
                previewPane.style.display = 'block';

                // Load the comment box after loading the feature details
                loadCommentBox(featureId);
            })
            .catch(error => {
                console.error('There was a problem loading the feature details:', error);
            });
    }


    function closeCommentBox() {
        const commentBoxContainer = document.getElementById('commentBoxContainer');
        const featurePreviewPane = document.getElementById('featurePreviewPane');
        var section = document.querySelector('.features-section');
        // Hide the comment box container and feature preview pane
        if (commentBoxContainer) {
            commentBoxContainer.style.display = 'none';
        }
        if (featurePreviewPane) {
            featurePreviewPane.style.display = 'none';

            section.style.transform = 'translateX(0%)';
        }
    }










</script>

<!-- Modal for displaying changes preview -->
<div class="modal fade" id="previewModal" tabindex="-1" role="dialog" aria-labelledby="previewModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="previewModalLabel">Preview Changes</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="previewChangesBody">
                <!-- Preview content will be displayed here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" id="clearAllChangesButton">
                    Clear All
                </button>
                <button type="button" class="btn btn-secondary" id="cancelUpdateButton">
                    Close
                </button>
                <button type="button" class="btn btn-primary" id="confirmUpdateButton">OK</button>
            </div>
        </div>
    </div>
</div>











<div class="modal fade" id="featureDetailsModal" tabindex="-1" role="dialog" aria-labelledby="featureDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">

            <div class="modal-body" id="featureDetailsModalContent">
                <!-- Feature details will be loaded here -->
            </div>
            <div class="modal-footer" onclick="closeFeatureDetailsModal()">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Feature details popup -->
<div id="featureDetailsPopup" class="feature-details-popup" onclick="closeFeatureDetailsPopup()">
    <div id="featureDetailsPopupContent"></div>
</div>








<div class="modal fade" id="commentModal" tabindex="-1" role="dialog" aria-labelledby="commentModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="commentModalLabel">Add Comment</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <label for="commentTextArea">Comment:</label>
<textarea id="commentTextArea" class="form-control"></textarea>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="window.location.href=window.location.href;">
                    Close
                </button>
                @foreach (var obj in Model)
                {
                    <button type="button" class="btn btn-primary" onclick="saveComment(@obj.FeatureId)">Save Comment</button>
                    break;
                }

            </div>
        </div>
    </div>
</div>


<input type="hidden" id="hiddenFeatureId" />


@* <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
*@
<!-- Font Awesome CSS (assuming you are using Font Awesome for icons) -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css">



<!-- jQuery (adjust the version if needed) -->
<script type="text/javascript" src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<!-- Bootstrap JS (adjust the version if needed) -->
<script type="text/javascript" src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>

<!-- DataTables CSS and JS -->
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css">
<script type="text/javascript" src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>

<!-- Buttons CSS and JS -->
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/buttons/2.0.1/css/buttons.dataTables.min.css">
<script type="text/javascript" src="https://cdn.datatables.net/buttons/2.0.1/js/dataTables.buttons.min.js"></script>
<script type="text/javascript" src="https://cdn.datatables.net/buttons/2.0.1/js/buttons.print.min.js"></script>


<script>
    // Initialize DataTables
    var table;

    jQuery(document).ready(function ($) {
        table = $('#featuresTable').DataTable({
            "pageLength": 100,
            "ordering": true,
            "responsive": true,
            "dom": '<"top">rt<"bottom"ip>',
            "buttons": [
                {
                    extend: 'print',
                    text: '<button class="btn btn-primary">Print</button>',
                    customize: function (win) {
                        // Exclude columns from print view
                        $(win.document.body).find('table thead tr th:nth-child(6), table thead tr th:nth-child(7), table tbody tr td:nth-child(6), table tbody tr td:nth-child(7)').remove();
                    }
                }
            ],
            // Add your other DataTables configurations here
        });

        $('#externalSearchBox').on('input', function () {
            table.search(this.value).draw();
        });

        // Trigger DataTable print when external button is clicked
        $('#externalPrintButton').on('click', function () {
            table.button('.buttons-print').trigger();
        });
    });

</script>






<div class="split-view">
    <!-- Left section for Features -->
    <div class="features-section">
        @* <div id="featurePreviewPane">
        <!-- Feature details will be displayed here -->
        </div> *@
        @*   <div id="featuresContainer">
        <div class="container remove-left-padding">
        <div class="row">
        <div class="col-12"> *@

        <div class="card">
            <div class="card-header text-center">
                <h3>Feature List</h3>
            </div>


            @* <input type="text" id="externalSearchBox" placeholder="Search DataTable"> *@
            <div class="card-body">
                <div class="container">
                    <div id="chart-container">
                        <canvas id="barChart"></canvas>
                    </div>
                    <br />
                    <div class="row pt-1">
                        <div class="col-12 col-sm-8">
                            <div class="input-group input-group-sm mb-3">
                                <input type="text" class="form-control" id="externalSearchBox" placeholder="Search by any Column">
                                <div class="input-group-append">
                                    <button class="btn btn-outline-secondary " type="button" id="searchButton">Search</button>
                                </div>
                            </div>
                        </div>
                        <div class="col-12 col-sm-2 text-center">
                            <button type="button" class="btn btn-outline-primary btn-sm btn-block w-100 m-1" onclick="updateAllChanges()">Update All</button>
                        </div>
                        <div class="col-6 col-sm-2 text-center">

                            <feature name="AdminSide">
                                <button id="externalPrintButton" class="btn btn-outline-primary btn-sm btn-block w-100 m-1">Download</button>
                            </feature>
                        </div>
                    </div>
                </div>

                <div class="table-responsive">
                    <table class="table table-bordered table-striped text-center remove-left-padding" id="featuresTable">
                        <thead>
                            <tr>
                                <th>Entity Name</th>
                                <th class="d-none d-sm-table-cell">Feature Id </th>
                                <th>Feature Name</th>
                                <th class="d-none d-sm-table-cell">Value </th>
                                <th class="d-none d-sm-table-cell">User Name </th>
                                <th> Approval status </th>
                                @*   <th class="d-none d-sm-table-cell">Comment</th> *@
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var obj in Model)
                            {
                                <tr class="feature-row" data-feature-id="@obj.FeatureId">
                                    <td onclick="loadFeatureDetails(@obj.FeatureId)">
                                        @if (obj.EntityName != null)
                                        {
                                            @obj.EntityName
                                        }
                                        else
                                        {
                                            <span>Entity Not Found</span>
                                        }
                                    </td>
                                    <td class="d-none d-sm-table-cell" onclick="loadFeatureDetails(@obj.FeatureId)">
                                        @obj.FeatureId
                                    </td>
                                    <td onclick="loadFeatureDetails(@obj.FeatureId)">
                                        @obj.FeatureName
                                    </td>
                                    <td class="d-none d-sm-table-cell" onclick="loadFeatureDetails(@obj.FeatureId)">
                                        @obj.Value
                                    </td>
                                    <td class="d-none d-sm-table-cell" onclick="loadFeatureDetails(@obj.FeatureId)">
                                        @obj.UserName
                                    </td>
                                    <td width="20%" class="text-center">
                                        @if (obj.ApprovalStatus == 2)
                                        {
                                            <div class="col-12 text-center">
                                                <button type="button" class="btn btn-outline-success btn-sm m-1" data-feature-id="@obj.FeatureId" onclick="acceptFeature(@obj.FeatureId)">Accept</button>
                                                <button type="button" class="btn btn-outline-danger btn-sm m-1" data-feature-id="@obj.FeatureId" onclick="rejectFeature(@obj.FeatureId)">Reject</button>
                                            </div>
                                        }
                                        else if (obj.ApprovalStatus == 0)
                                        {
                                            <span class="text-success">Approved</span>
                                        }
                                        else
                                        {
                                            <span class="text-danger">Rejected</span>
                                        }
                                    </td>
                                    @* <td class="d-none d-sm-table-cell">
                                <button type="button" class="btn btn-info" onclick="openCommentBox(@obj.FeatureId)">Comment</button>
                                </td> *@
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>


    </div>


    <div class="details-and-comment">

        <div class="preview-pane" id="featurePreviewPane" style="display: none">
            <!-- Feature details will be displayed here -->
        </div>
        <div id="commentBoxContainer" class="comment-box" style="display: none">
            <!-- This is where the comment box will be loaded -->
        </div>
    </div>


</div>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>


<script>
    // Function to update the chart with new data
    // Function to update the chart with new data
    function updateChart() {
        fetch('/AdminM/BarChart', {
            method: 'Get',
            headers: {
                'Content-Type': 'application/json'
            }
        })
            .then(response => {
                if (!response.ok) {
                    console.log(response);
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(newData => {
                var summarizedData = newData.reduce((accumulator, currentItem) => {
                    if (currentItem.ApprovalStatus === 0) {
                        accumulator.approved++;
                    } else if (currentItem.ApprovalStatus === 1) {
                        accumulator.rejected++;
                    } else {
                        accumulator.pending++;
                    }
                    return accumulator;
                }, { approved: 0, rejected: 0, pending: 0 });

                myChart.data.datasets[0].data = [summarizedData.approved, summarizedData.rejected, summarizedData.pending];

                myChart.data.datasets[0].backgroundColor = [
                    'rgba(0, 0, 145, 0.6)', // Approved (blue)
                    'rgba(0, 128, 255, 0.6)', // Rejected (light blue)
                    'rgba(0, 64, 128, 0.6)'  // Pending (darker blue)
                ];

                // Update the chart
                myChart.update();
            })
            .catch(error => {
                console.error('Error fetching new data:', error);
            });
    }


    // Extract data from ViewBag
    var chartData = @Html.Raw(JsonConvert.SerializeObject(ViewBag.ChartData));

    // Parse the JSON data
    var parsedData = JSON.parse(chartData);

    // Summarize data for approved, rejected, and pending
    var summarizedData = parsedData.reduce((accumulator, currentItem) => {
        if (currentItem.ApprovalStatus === 0) {
            accumulator.approved++;
        } else if (currentItem.ApprovalStatus === 1) {
            accumulator.rejected++;
        } else {
            accumulator.pending++;
        }
        return accumulator;
    }, { approved: 0, rejected: 0, pending: 0 });

    var labels = ['Approved', 'Rejected', 'Pending'];
    var dataValues = [summarizedData.approved, summarizedData.rejected, summarizedData.pending];

    var backgroundColors = [
        'rgba(0, 0, 255, 0.6)', // Approved (blue)
        'rgba(0, 128, 255, 0.6)', // Rejected (light blue)
        'rgba(0, 64, 128, 0.6)'  // Pending (darker blue)
    ];
    var borderColor = 'rgba(0, 0, 255, 1)'; // Border color for all bars

    var ctx = document.getElementById('barChart').getContext('2d');
    var myChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: labels,
            datasets: [{
                label: 'Approval Status',
                data: dataValues,
                backgroundColor: backgroundColors,
                borderColor: borderColor,
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            },
            legend: {
                display: true,
                position: 'right',
                labels: {
                    boxWidth: 15,
                    usePointStyle: true,
                }
            }
        }
    });

    updateChart();
</script>